---
- hosts: canvas
  become_user: "{{pac}}-{{user}}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:

  #################################
  ## create directories
  #################################
  - name: create directory etc
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory var/tmp
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory

  - name: create directory files
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/files"
      state: directory

  #################################
  ## install requirements
  #################################
  - name: Install node.js
    import_tasks: tasks/hs_nodejs.yml

  - name: Install ruby
    import_tasks: tasks/hs_ruby.yml

  ##################################
  ## install Canvas LMS
  ##################################

  - name: Check for git working tree
    become: yes
    stat:
      path: /home/pacs/{{pac}}/users/{{user}}/canvas
    register: workingtree
  - name: get repo
    become: yes
    git:
      repo: https://github.com/instructure/canvas-lms.git
      dest: /home/pacs/{{pac}}/users/{{user}}/canvas
      version: "prod"
      #single_branch: yes
    when: not workingtree.stat.exists

  - name: switch to older branch for stability
    become: yes
    shell: |
      git checkout -b "{{canvas_git_branch}}"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/canvas"

  ########################
  ## install dependencies
  ########################

  # for building the assets we need dress_code
  - name: require gem dress_code
    become: yes
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/canvas/Gemfile.d/app.rb
      regexp: '^gem "dress_code"'
      line: 'gem "dress_code", "1.2.1"'
      insertafter: '^gem "irb"'

  # see https://github.com/instructure/canvas-lms/wiki/Production-Start#bundler-and-canvas-dependencies
  - name: install ruby dependencies
    become: yes
    shell: |
      . ~/.profile
      gem update --system
      gem install bundler --version 2.2.33
      bundle config set --local path vendor/bundle
      #bundle install || exit -1
      bundle install --without development test || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/canvas"
      creates: "/home/pacs/{{pac}}/users/{{user}}/canvas/vendor/bundle"

  - name: install node dependencies
    become: yes
    shell: |
      . ~/.profile
      yarn install || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/canvas"
      creates: "/home/pacs/{{pac}}/users/{{user}}/canvas/node_modules"

  ##################################
  ## configuration
  ##################################
  - name: upload the password for the postgresql database
    become: yes
    template:
      src: "templates/pgpass"
      dest: "/home/pacs/{{pac}}/users/{{user}}/.pgpass"
      mode: "700"

  - name: copy config files
    become: yes
    shell: |
      for config in delayed_jobs file_store external_migration; \
         do cp config/$config.yml.example config/$config.yml; done
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/canvas"
      creates: "/home/pacs/{{pac}}/users/{{user}}/canvas/config/delayed_jobs.yml"

  - name: upload the config for the database
    become: yes
    template:
      src: "templates/database.yml"
      dest: "/home/pacs/{{pac}}/users/{{user}}/canvas/config"

  - name: upload the config for outgoing mail
    become: yes
    template:
      src: "templates/outgoing_mail.yml"
      dest: "/home/pacs/{{pac}}/users/{{user}}/canvas/config"

  - name: upload the config for domain
    become: yes
    template:
      src: "templates/domain.yml"
      dest: "/home/pacs/{{pac}}/users/{{user}}/canvas/config"

  - name: upload the config for rich content editor API
    become: yes
    template:
      src: "templates/dynamic_settings.yml"
      dest: "/home/pacs/{{pac}}/users/{{user}}/canvas/config"

  - name: upload the config for security
    become: yes
    template:
      src: "templates/security.yml"
      dest: "/home/pacs/{{pac}}/users/{{user}}/canvas/config"

  - name: disable cache classes
    become: yes
    replace:
      path: "/home/pacs/{{pac}}/users/{{user}}/canvas/config/environments/production.rb"
      regexp: "^  config.cache_classes = .*"
      replace: "  config.cache_classes = false"

  ######################
  ## initialise instance
  ######################

  # unknown attribute 'singleton' for Delayed::Backend::ActiveRecord::Job
  # see https://github.com/instructure/canvas-lms/issues/2034
  - name: check for wrong migration file
    become: yes
    stat: path="/home/pacs/{{pac}}/users/{{user}}/canvas/db/migrate/20210812210129_add_singleton_column.rb"
    register: wrong_migration

  - name: move one migration file
    become: yes
    command: mv db/migrate/20210812210129_add_singleton_column.rb db/migrate/20111111214311_add_singleton_column.rb
    args:
      chdir: "/home/pacs/{{pac}}/users/{{user}}/canvas"
    when: wrong_migration.stat.exists

  # see https://github.com/scisco/canvas-lms-docker/blob/master/.env.sample
  - name: upload the env file
    become: yes
    template:
      src: "templates/env"
      dest: "/home/pacs/{{pac}}/users/{{user}}/canvas/.env"

  # see https://github.com/instructure/canvas-lms/wiki/Production-Start#database-population
  - name: initialise the database
    become: yes
    shell: |
      . ~/.profile
      yarn gulp rev || exit -1
      # see https://github.com/instructure/canvas-lms/issues/2035
      mv db/migrate/20210823222355_change_immersive_reader_allowed_on_to_on.rb ~
      export CANVAS_LMS_ADMIN_EMAIL="{{admin_email}}"
      export CANVAS_LMS_ADMIN_PASSWORD="{{admin_password}}"
      export CANVAS_LMS_ACCOUNT_NAME="{{organisation_name}}"
      export CANVAS_LMS_STATS_COLLECTION="opt_out"
      export SPRING_TMP_PATH=$HOME/var/tmp
      RAILS_ENV=production bundle exec rails db:initial_setup || exit -1
      mv ~/20210823222355_change_immersive_reader_allowed_on_to_on.rb db/migrate/
      RAILS_ENV=production bundle exec rails db:migrate || exit -1
      RAILS_ENV=production bundle exec rake db:reset_encryption_key_hash || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_initialised
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/canvas"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible_initialised"

  # DONE: https://github.com/instructure/canvas-lms/issues/761
  # test with: ~/canvas$ bin/dress_code config/styleguide.yml
  # export COMPILE_ASSETS_API_DOCS=0 avoids: Don't know how to build task 'doc:api'; see lib/tasks/canvas.rake
  - name: compile the assets
    become: yes
    shell: |
      . ~/.profile
      yarn run build:css || exit -1
      export COMPILE_ASSETS_API_DOCS=0
      RAILS_ENV=production bundle exec rake canvas:compile_assets || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/canvas"


  # https://groups.google.com/g/canvas-lms-users/c/qUT1-FSGkME
  # we are using Postgresql 11
  # avoid error:
  #    ActiveRecord::StatementInvalid (PG::UndefinedColumn: ERROR:  column "collisdeterministic" does not exist
  #    LINE 1: ...e=pg_namespace.oid WHERE collprovider='i' AND NOT collisdete...
  - name: upload the patch for postgresql 11
    become: yes
    template:
      src: "templates/postgresql11.patch"
      dest: "/home/pacs/{{pac}}/users/{{user}}/"

  - name: apply the patch for postgresql 11
    become: yes
    shell: |
       patch -p1 < ../postgresql11.patch || exit 0
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/canvas"

  - name: drop original files path
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/canvas/tmp/files"
      state: absent

  - name: create a symbolic link for files
    become: yes
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/files"
      dest: "/home/pacs/{{pac}}/users/{{user}}/canvas/tmp/files"
      state: link

  #####################
  ## setup the rce api
  #####################
  - name: create directory rce_api
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/rce_api"
      state: directory
  - name: download canvas rce api
    become: yes
    unarchive:
      src: https://github.com/instructure/canvas-rce-api/archive/refs/tags/{{canvas_rce_api_version}}.tar.gz
      remote_src: yes
      dest: /home/pacs/{{pac}}/users/{{user}}/rce_api
      extra_opts: [--strip-components=1]
      creates: /home/pacs/{{pac}}/users/{{user}}/rce_api/package.json
  - name: install node dependencies for rce_api
    become: yes
    shell: |
      . ~/.profile
      npm install --production || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/rce_api"
      creates: "/home/pacs/{{pac}}/users/{{user}}/rce_api/node_modules"


  ########################
  ## setup the apache site
  ########################
  - name: upload the htaccess file
    become: yes
    template:
      src: "templates/htaccess"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/.htaccess"

  - name: drop htdocs-ssl
    become: yes
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
       state: absent
  - name: create symbolic link for htdocs-ssl
    become: yes
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/canvas/public"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
      state: link

  - name: drop app-ssl
    become: yes
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/app-ssl"
       state: absent
  - name: create symbolic link for app-ssl
    become: yes
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/canvas"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/app-ssl"
      state: link

  - name: upload the rce_api htaccess file
    become: yes
    template:
      src: "templates/rce_htaccess"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/rce.{{domain}}/.htaccess"
  - name: drop htdocs-ssl for rce_api
    become: yes
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/rce.{{domain}}/htdocs-ssl"
       state: absent
  - name: drop app-ssl for rce_api
    become: yes
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/rce.{{domain}}/app-ssl"
       state: absent
  - name: create symbolic link for app-ssl for rce_api
    become: yes
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/rce_api"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/rce.{{domain}}/app-ssl"
      state: link


  ####################################
  ## install cron jobs
  ####################################
  #- name: start monit as cronjob
  #  become: yes
  #  cron:
  #    name: "start monit at reboot"
  #    special_time: reboot
  #    job: rm -f $HOME/var/run/* && /usr/bin/monit -c "$HOME/.monitrc"

  ##############################################
  ## start services via monit
  ##############################################
  #- name: start monit
  #  become: yes
  #  shell: |
  #    /usr/bin/monit -c ".monitrc"
  #  args:
  #    executable: /bin/bash
  #    chdir: "/home/pacs/{{pac}}/users/{{user}}/"
  #    creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"


# TODO start cronjob
# TODO upload restart script
# TODO logrotate for canvas/log/production.log